name: ID PASS - MOSIP Resident Application Custom build

env:
  backendServiceDefaultUrl: https://api.onpremb3.idencode.link

on:
  workflow_dispatch:
    inputs:
      backendServiceUrl:
        description: 'Backend service URL'
        required: true
        default: 'https://api.onpremb3.idencode.link'
        type: string
      theme:
        description: 'Application Theme'
        required: true
        default: 'orange'
        type: choice
        options:
          - orange
          - purple

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      # Cache stuff for faster build
      - name: Cache local npm repository
        uses: actions/cache@v3.0.11
        with:
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          path: ~/.npm

      - name: Cache local gradle repository
        uses: actions/cache@v3.0.11
        with:
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper

      - name: Install npm dependencies
        run: |
          npm install

      - name: Create .env.local file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env.local > android/local.properties

      - name: Setup branch and env
        run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
          echo "GPG_TTY=$(tty)" >> $GITHUB_ENV   

      - name: Setup branch and GPG public key
        run: |
          # Strip git ref prefix from version
        
          echo ${{ env.BRANCH_NAME }}
       
          echo ${{ env.GPG_TTY }}
          sudo apt-get --yes install gnupg2
          gpg2 --import ./.github/keys/mosipgpgkey_pub.gpg 
          gpg2 --quiet --batch --passphrase=${{secrets.gpg_secret}}  --allow-secret-key-import --import ./.github/keys/mosipgpgkey_sec.gpg 

      - name: Build App Newlogic Release
        run: |
          cd android
          if [ ! -z "$FIREBASE_SECRET" ] && [ -f app/google-services.json.gpg ];then rm -f app/google-services.json;gpg2 --quiet --batch --passphrase=$FIREBASE_SECRET --pinentry-mode loopback --decrypt --output app/google-services.json app/mosip-google-services.json.gpg;fi
          ./gradlew :app:assembleNewlogicRelease
        env:
          MIMOTO_HOST: ${{ github.event.inputs.backendServiceUrl }}
          FIREBASE_SECRET: ${{ secrets.GPG_SECRET }}
          APPLICATION_THEME: ${{ github.event.inputs.theme }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: apk-output
          path: android/app/build/outputs/apk/newlogic/release/
          retention-days: 10
